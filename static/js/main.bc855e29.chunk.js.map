{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/Container/Container.js","components/Section/Section.js","redux/contacts/contacts-actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","styles","Section","section","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","connect","contacts","items","dispatch","onDeleteContact","contactActions","contactList","length","map","contactItem","type","button","onClick","notification","Filter","onChange","defaultProps","state","event","target","value","ContactForm","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","existingContact","props","find","contact","alert","onSubmit","reset","form","this","required","Component","App","createReducer","actions","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,8B,mBCA5DD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,oJCWZC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,KCWtBG,EAVC,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,OACd,yBAASC,UAAWC,IAAOE,QAA3B,SACE,cAAC,EAAD,UAAYJ,O,+BCUDF,EAFC,CAAEO,WAbCC,YAAa,gBAAgB,SAACC,EAAMC,GACrD,MAAO,CACLC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAQwBK,cAHRP,YAAa,mBAGUQ,aAFxBR,YAAa,oB,gBC4B5BS,EAAqB,SAACC,EAAaC,GACvC,IAAMC,EAAmBD,EAAOE,cAEhC,OAAOH,EAAYC,QAAO,qBAAGV,KACtBY,cAAcC,SAASF,OAYjBG,eARS,SAAC,GAAD,QAAGC,SAAYC,EAAf,EAAeA,MAAON,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5DK,SAAUP,EAAmBQ,EAAON,OAGX,SAAAO,GAAQ,MAAK,CACtCC,gBAAiB,SAAAf,GAAE,OAAIc,EAASE,EAAeb,cAAcH,QAGhDW,EAlDK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUG,EAAsB,EAAtBA,gBAC/B,OACE,oBAAIxB,UAAWC,IAAOyB,YAAtB,SACGL,EAASM,OACRN,EAASO,KAAI,gBAAGnB,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACX,qBAAIP,UAAWC,IAAO4B,YAAtB,UACGvB,EADH,MACYC,EACV,wBACEuB,KAAK,SACL9B,UAAWC,IAAO8B,OAClBC,QAAS,kBAAMR,EAAgBf,IAHjC,sBAFsCA,MAY1C,oBAAIT,UAAWC,IAAOgC,aAAtB,mC,iBCjBFC,EAAS,SAAC,GAA0B,IAAxBlB,EAAuB,EAAvBA,OAAQmB,EAAe,EAAfA,SACxB,OACE,wBAAOnC,UAAWC,IAAOe,OAAzB,kCACwB,IACtB,uBAAOc,KAAK,OAAOd,OAAQA,EAAQmB,SAAUA,QAKnDD,EAAOE,aAAe,CACpBpB,OAAQ,IAQV,I,EAQeI,eARS,SAAAiB,GAAK,MAAK,CAChCrB,OAAQqB,EAAMhB,SAASL,WAGE,SAAAO,GAAQ,MAAK,CACtCY,SAAU,SAAAG,GAAK,OAAIf,EAASE,EAAeZ,aAAayB,EAAMC,OAAOC,YAGxDpB,CAA6Cc,G,wBC3BtDO,E,4MACJJ,MAAQ,CACN/B,KAAM,GACNC,OAAQ,I,EAOVmC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,cAAlBtC,EADU,EACVA,KAAMkC,EADI,EACJA,MACd,EAAKK,SAAL,eAAiBvC,EAAOkC,K,EAG1BM,aAAe,SAAAR,GACbA,EAAMS,iBADgB,MAGG,EAAKV,MAAtB/B,EAHc,EAGdA,KAAMC,EAHQ,EAGRA,OAEd,GAAKD,EAAL,CAIA,IAAM0C,EAAkB,EAAKC,MAAMZ,MAAMhB,SAASC,MAAM4B,MACtD,SAAAC,GAAO,OAAIA,EAAQ7C,OAASA,KAG1B0C,EACFI,MAAM,GAAD,OAAIJ,EAAgB1C,KAApB,8BAIP,EAAK2C,MAAMI,SAAS/C,EAAMC,GAE1B,EAAK+C,W,EAGPA,MAAQ,WACN,EAAKT,SAAS,CAAEvC,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMP,UAAWC,IAAOsD,KAAMF,SAAUG,KAAKV,aAA7C,UACE,yCAEE,uBACEhB,KAAK,OACLxB,KAAK,OACLkC,MAAOgB,KAAKnB,MAAM/B,KAClB6B,SAAUqB,KAAKd,aACfe,UAAQ,OAGZ,2CAEE,uBACE3B,KAAK,SACLxB,KAAK,SACLkC,MAAOgB,KAAKnB,MAAM9B,OAClB4B,SAAUqB,KAAKd,aACfe,UAAQ,OAGZ,wBAAQ3B,KAAK,SAAS9B,UAAWC,IAAO8B,OAAxC,gC,GAjEkB2B,aAiFXtC,eARS,SAAAiB,GAAK,MAAK,CAChCA,YAGyB,SAAAd,GAAQ,MAAK,CACtC8B,SAAU,SAAC/C,EAAMC,GAAP,OAAkBgB,EAASE,EAAerB,WAAWE,EAAMC,QAGxDa,CAA6CqB,GC/D7CkB,E,4JAjBb,WACE,OACE,qCACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,OAEF,eAAC,EAAD,WACE,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,c,GAXQD,a,uBCHZpC,EAAQsC,YAAc,IAAD,mBACxBC,EAAQzD,YAAa,SAACiC,EAAD,YAAU7B,SAAV,mBAAqC6B,OADlC,cAExBwB,EAAQjD,eAAgB,SAACyB,EAAD,OAAU7B,EAAV,EAAUA,QAAV,OACvB6B,EAAMrB,QAAO,qBAAGP,KAAgBD,QAHT,IAMrBQ,EAAS4C,YAAc,GAAD,eACzBC,EAAQhD,cAAe,SAACiD,EAAD,YAAMtD,YAGnBuD,EAAkBC,YAAgB,CAC7C1C,QACAN,W,wBCFIiD,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAwB,CAC5BC,IAAK,YACLC,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACP5D,SAAU6D,YAAeP,EAAuBZ,IAElDE,aACAkB,UAAUC,IAGNC,EAAYC,YAAaP,G,QCzB/BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaW,QAAQ,aAAaL,UAAWA,EAA7C,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,U,kBClB1BhG,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,OAAS,+B","file":"static/js/main.bc855e29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\nimport Container from '../Container/Container';\n\nconst Section = ({ children }) => (\n  <section className={styles.section}>\n    <Container>{children}</Container>\n  </section>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/Add', (name, number) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction('contacts/Delete');\nconst changeFilter = createAction('contacts/Filter');\n\nconst exports = { addContact, deleteContact, changeFilter };\n\nexport default exports;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contacts/contacts-actions';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.contactList}>\n      {contacts.length ? (\n        contacts.map(({ id, name, number }) => (\n          <li className={styles.contactItem} key={id}>\n            {name} : {number}\n            <button\n              type=\"button\"\n              className={styles.button}\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))\n      ) : (\n        <li className={styles.notification}>No contact found</li>\n      )}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contacts/contacts-actions';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={styles.filter}>\n      Find contacts by name{' '}\n      <input type=\"text\" filter={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  filter: '',\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(contactActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactActions from '../../redux/contacts/contacts-actions';\n\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n\n    if (!name) {\n      return;\n    }\n\n    const existingContact = this.props.state.contacts.items.find(\n      contact => contact.name === name,\n    );\n\n    if (existingContact) {\n      alert(`${existingContact.name} is already in contacts.`);\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"name\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"number\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React, { Component } from 'react';\n\nimport Section from './components/Section';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Section>\n          <h1>PhoneBook</h1>\n          <ContactForm />\n        </Section>\n        <Section>\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading=\"Loading...\" persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactItem\":\"ContactList_contactItem__EQAbQ\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}